{"version":3,"sources":["Gate.jsx","Qubit.jsx","Circuit.jsx","Toolbar.jsx","Sidebar.jsx","GateMenu.jsx","Measure.jsx","App.jsx","index.js"],"names":["Gate","this","props","type","className","onDelete","ref","innerRef","onDoubleClick","e","qubit","index","options","showGateMatrix","math","onClick","onSelectTrigger","Component","Qubit","number","style","marginLeft","marginRight","gates","map","gate","onDeleteGate","uuid","droppableId","direction","provided","droppableProps","key","showGateDrop","Circuit","circuit","onAddQubit","onRemoveQubit","onClearCircuit","Toolbar","display","height","position","right","top","ticking","format","timezone","Sidebar","onChange","onSetOption","checked","offColor","showStatevector","value","randomSeed","GateMenu","snapshot","draggableId","draggableProps","dragHandleProps","Measure","state","stateVector","a","b","j","N","length","k","Math","pow","l","index0","index1","change","redistribute","tmpStateVector","phaseTransition","m","n","u","min","v","max","x","y","z","swap","console","log","push","i","foundCNOT","evalHGate","evalTGate","evalCNOTGate","setState","evaluateCircuit","prevProps","prevState","qubits","states","toString","padStart","split","join","undefined","probabilities","probability","re","im","App","result","destination","charAt","tmpCircuit","parseInt","col","substring","alert","option","target","connecting","isCNOT","pop","bind","onDragEnd","concat","ReactDOM","render","document","getElementById"],"mappings":"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AE9D,QAASiF,M,4BAG3B,WACEnH,KAAKgG,SAAS,CACZ9D,QAAS,CACP,CACE,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEF,CACE,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MAEF,CACE,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,W,wBAMR,WACE,IAAIiF,EAAanH,KAAK6D,MAAM3B,QACxBiF,EAAWhD,OAAS,IACtBgD,EAAWzB,KAAK,CACd,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,OAGJ1F,KAAKgG,SAAS,CAAE9D,QAASiF,M,2BAG3B,WACE,IAAIA,EAAanH,KAAK6D,MAAM3B,QACxBiF,EAAWhD,OAAS,GACtBgD,EAAWS,MAEb5H,KAAKgG,SAAS,CAAE9D,QAASiF,M,oBAG3B,WAAU,IAAD,OACP,OACE,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,CACExG,QAASX,KAAK6D,MAAMlD,QACpBsC,YAAajD,KAAKiD,YAAY4E,KAAK7H,QAErC,qBAAKG,UAAU,YAAf,SACE,cAAC,IAAD,CAAiB2H,UAAW,SAACd,GAAD,OAAY,EAAKc,UAAUd,IAAvD,SACE,gCACE,+CACA,uBACA,wCACA,cAAC,EAAD,CAAUrG,QAASX,KAAK6D,MAAMlD,UAC9B,uBACA,0CACA,cAAC,EAAD,CACEA,QAASX,KAAK6D,MAAMlD,QACpBuB,QAASlC,KAAK6D,MAAM3B,QACpBnB,gBAAiBf,KAAKe,gBAAgB8G,KAAK7H,MAC3CyB,aAAczB,KAAKyB,aAAaoG,KAAK7H,MACrCqC,eAAgBrC,KAAKqC,eAAewF,KAAK7H,MACzCmC,WAAYnC,KAAKmC,WAAW0F,KAAK7H,MACjCoC,cAAepC,KAAKoC,cAAcyF,KAAK7H,QAEzC,uBACA,8CACA,cAAC,EAAD,CACEkC,QAAS,GAAG6F,OAAO/H,KAAK6D,MAAM3B,SAC9BvB,QAASX,KAAK6D,MAAMlD,wB,GArVlBK,aCJlBgH,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ca7aa455.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\nimport { BlockMath } from \"react-katex\";\r\nimport \"katex/dist/katex.min.css\";\r\n\r\nclass Gate extends Component {\r\n  render() {\r\n    switch (this.props.type) {\r\n      case \"cnot\":\r\n        return (\r\n          <div\r\n            className={\r\n              this.props.onDelete\r\n                ? \"gate cnot noselect deletable\"\r\n                : \"gate cnot noselect\"\r\n            }\r\n            {...this.props}\r\n            ref={this.props.innerRef}\r\n            onDoubleClick={(e) => {\r\n              if (this.props.onDelete)\r\n                this.props.onDelete(this.props.qubit, this.props.index, true);\r\n            }}\r\n          >\r\n            CNOT\r\n            <span\r\n              className={\r\n                this.props.options.showGateMatrix ? \"gate-tooltip\" : \"hidden\"\r\n              }\r\n            >\r\n              <BlockMath math=\"\\begin{bmatrix}1&0&0&0\\\\ 0&1&0&0\\\\ 0&0&0&1\\\\ 0&0&1&0\\end{bmatrix}\" />\r\n            </span>\r\n          </div>\r\n        );\r\n      case \"cnotUp\":\r\n        return (\r\n          <div\r\n            className={\r\n              this.props.onDelete\r\n                ? \"gate cnot x noselect deletable\"\r\n                : \"gate cnot x noselect\"\r\n            }\r\n            {...this.props}\r\n            ref={this.props.innerRef}\r\n            onDoubleClick={(e) => {\r\n              if (this.props.onDelete)\r\n                this.props.onDelete(this.props.qubit, this.props.index, true);\r\n            }}\r\n          >\r\n            X\r\n            <span\r\n              className={\r\n                this.props.options.showGateMatrix ? \"gate-tooltip\" : \"hidden\"\r\n              }\r\n            >\r\n              <BlockMath math=\"\\begin{bmatrix}0&1\\\\ 1&0\\end{bmatrix}\" />\r\n            </span>\r\n            <span className=\"cnotUp\" />\r\n          </div>\r\n        );\r\n      case \"cnotDown\":\r\n        return (\r\n          <div\r\n            className={\r\n              this.props.onDelete\r\n                ? \"gate cnot x noselect deletable\"\r\n                : \"gate cnot x noselect\"\r\n            }\r\n            {...this.props}\r\n            ref={this.props.innerRef}\r\n            onDoubleClick={(e) => {\r\n              if (this.props.onDelete)\r\n                this.props.onDelete(this.props.qubit, this.props.index, true);\r\n            }}\r\n          >\r\n            X\r\n            <span\r\n              className={\r\n                this.props.options.showGateMatrix ? \"gate-tooltip\" : \"hidden\"\r\n              }\r\n            >\r\n              <BlockMath math=\"\\begin{bmatrix}0&1\\\\ 1&0\\end{bmatrix}\" />\r\n            </span>\r\n            <span className=\"cnotDown\" />\r\n          </div>\r\n        );\r\n      case \"h\":\r\n        return (\r\n          <div\r\n            className={\r\n              this.props.onDelete\r\n                ? \"gate h noselect deletable\"\r\n                : \"gate h noselect\"\r\n            }\r\n            {...this.props}\r\n            ref={this.props.innerRef}\r\n            onDoubleClick={(e) => {\r\n              if (this.props.onDelete)\r\n                this.props.onDelete(this.props.qubit, this.props.index, false);\r\n            }}\r\n          >\r\n            H\r\n            <span\r\n              className={\r\n                this.props.options.showGateMatrix ? \"gate-tooltip\" : \"hidden\"\r\n              }\r\n            >\r\n              <BlockMath math=\"\\frac1{\\sqrt2}\\begin{bmatrix}1&1\\\\ 1&-1\\end{bmatrix}\" />\r\n            </span>\r\n          </div>\r\n        );\r\n      case \"t\":\r\n        return (\r\n          <div\r\n            className={\r\n              this.props.onDelete\r\n                ? \"gate t noselect deletable\"\r\n                : \"gate t noselect\"\r\n            }\r\n            {...this.props}\r\n            ref={this.props.innerRef}\r\n            onDoubleClick={(e) => {\r\n              if (this.props.onDelete)\r\n                this.props.onDelete(this.props.qubit, this.props.index, false);\r\n            }}\r\n          >\r\n            T\r\n            <span\r\n              className={\r\n                this.props.options.showGateMatrix ? \"gate-tooltip\" : \"hidden\"\r\n              }\r\n            >\r\n              <BlockMath math=\"\\begin{bmatrix}1&0\\\\ 0&e^{i\\pi /4}\\end{bmatrix}\" />\r\n            </span>\r\n          </div>\r\n        );\r\n      case \"trigopt\":\r\n        return (\r\n          <div\r\n            className=\"gate trigopt noselect\"\r\n            {...this.props}\r\n            ref={this.props.innerRef}\r\n          >\r\n            <div\r\n              onClick={(e) =>\r\n                this.props.onSelectTrigger(this.props.qubit, this.props.index)\r\n              }\r\n            />\r\n          </div>\r\n        );\r\n      case \"trig\":\r\n        return (\r\n          <div\r\n            className=\"gate trig noselect\"\r\n            {...this.props}\r\n            ref={this.props.innerRef}\r\n          >\r\n            <div />\r\n          </div>\r\n        );\r\n      case \"connect\":\r\n        return (\r\n          <div\r\n            className=\"gate connect noselect\"\r\n            {...this.props}\r\n            ref={this.props.innerRef}\r\n          >\r\n            <div />\r\n          </div>\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Gate;\r\n","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\nimport Gate from \"./Gate\";\r\nimport { v4 as uuid } from \"uuid\";\r\n\r\nclass Qubit extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"qubit\">\r\n        <span className=\"qubit-line\"></span>\r\n        <span>\r\n          <strong>\r\n            q<sub>{this.props.number}</sub>\r\n          </strong>\r\n        </span>\r\n        <span style={{ marginLeft: \"10px\", marginRight: \"20px\" }}>|0⟩</span>\r\n        {this.props.gates.map((gate, index) => {\r\n          if (gate === \"h\") {\r\n            return (\r\n              <span className=\"gate-wrapper\" key={uuid()}>\r\n                <Gate\r\n                  type=\"h\"\r\n                  qubit={this.props.number}\r\n                  index={index}\r\n                  options={this.props.options}\r\n                  onDelete={this.props.onDeleteGate}\r\n                />\r\n              </span>\r\n            );\r\n          } else if (gate === \"cnot\") {\r\n            return (\r\n              <span className=\"gate-wrapper\" key={uuid()}>\r\n                <Gate\r\n                  type=\"cnot\"\r\n                  qubit={this.props.number}\r\n                  index={index}\r\n                  options={this.props.options}\r\n                  onDelete={this.props.onDeleteGate}\r\n                />\r\n              </span>\r\n            );\r\n          } else if (gate === \"cnotUp\") {\r\n            return (\r\n              <span className=\"gate-wrapper\" key={uuid()}>\r\n                <Gate\r\n                  type=\"cnotUp\"\r\n                  qubit={this.props.number}\r\n                  index={index}\r\n                  options={this.props.options}\r\n                  onDelete={this.props.onDeleteGate}\r\n                />\r\n              </span>\r\n            );\r\n          } else if (gate === \"cnotDown\") {\r\n            return (\r\n              <span className=\"gate-wrapper\" key={uuid()}>\r\n                <Gate\r\n                  type=\"cnotDown\"\r\n                  qubit={this.props.number}\r\n                  index={index}\r\n                  options={this.props.options}\r\n                  onDelete={this.props.onDeleteGate}\r\n                />\r\n              </span>\r\n            );\r\n          } else if (gate === \"t\") {\r\n            return (\r\n              <span className=\"gate-wrapper\" key={uuid()}>\r\n                <Gate\r\n                  type=\"t\"\r\n                  qubit={this.props.number}\r\n                  index={index}\r\n                  options={this.props.options}\r\n                  onDelete={this.props.onDeleteGate}\r\n                />\r\n              </span>\r\n            );\r\n          } else if (gate === \"trig\") {\r\n            return (\r\n              <span className=\"gate-wrapper\" key={uuid()}>\r\n                <Gate\r\n                  type=\"trig\"\r\n                  options={this.props.options}\r\n                  onDelete={this.props.onDeleteGate}\r\n                />\r\n              </span>\r\n            );\r\n          } else if (gate === \"connect\") {\r\n            return (\r\n              <span className=\"gate-wrapper\" key={uuid()}>\r\n                <Gate\r\n                  type=\"connect\"\r\n                  options={this.props.options}\r\n                  onDelete={this.props.onDeleteGate}\r\n                />\r\n              </span>\r\n            );\r\n          } else if (gate === \"trigopt\") {\r\n            return (\r\n              <span className=\"gate-wrapper\" key={uuid()}>\r\n                <Gate\r\n                  type=\"trigopt\"\r\n                  qubit={this.props.number}\r\n                  index={index}\r\n                  options={this.props.options}\r\n                  onSelectTrigger={this.props.onSelectTrigger}\r\n                />\r\n              </span>\r\n            );\r\n          } else {\r\n            return (\r\n              <span className=\"gate-wrapper\" key={uuid()}>\r\n                <Droppable\r\n                  droppableId={\"q\" + this.props.number + \",\" + index}\r\n                  direction=\"horizontal\"\r\n                >\r\n                  {(provided) => {\r\n                    return (\r\n                      <span\r\n                        {...provided.droppableProps}\r\n                        ref={provided.innerRef}\r\n                        key={uuid()}\r\n                        className={\r\n                          this.props.options.showGateDrop\r\n                            ? \"gate-drop show\"\r\n                            : \"gate-drop\"\r\n                        }\r\n                      />\r\n                    );\r\n                  }}\r\n                </Droppable>\r\n              </span>\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Qubit;\r\n","import React, { Component } from \"react\";\r\nimport Qubit from \"./Qubit\";\r\nimport \"./style.css\";\r\n\r\nclass Circuit extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"circuit-wrapper\">\r\n        <div className=\"circuit\">\r\n          {this.props.circuit.map((qubit, index) => (\r\n            <Qubit\r\n              number={index}\r\n              options={this.props.options}\r\n              key={index}\r\n              gates={qubit}\r\n              onSelectTrigger={this.props.onSelectTrigger}\r\n              onDeleteGate={this.props.onDeleteGate}\r\n            />\r\n          ))}\r\n        </div>\r\n        <button className=\"button\" onClick={() => this.props.onAddQubit()}>\r\n          Add qubit\r\n        </button>\r\n        <button className=\"button\" onClick={() => this.props.onRemoveQubit()}>\r\n          Remove qubit\r\n        </button>\r\n        <button className=\"button\" onClick={() => this.props.onClearCircuit()}>\r\n          Reset circuit\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Circuit;\r\n","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\nimport Clock from \"react-live-clock\";\r\n\r\nclass Toolbar extends Component {\r\n  render() {\r\n    return (\r\n      <div style={{ display: \"fixed\", height: \"50px\" }}>\r\n        <div className=\"toolbar\">\r\n          Spring 2021 IQC Quantum Computer Simulator\r\n          <div style={{ position: \"absolute\", right: \"40px\", top: \"0\" }}>\r\n            <Clock ticking format={\"HH:mm:ss\"} timezone={\"Etc/UTC\"} />\r\n          </div>\r\n          <div style={{ position: \"absolute\", right: \"25px\", top: \"0\" }}>Z</div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Toolbar;\r\n","import React, { Component } from \"react\";\r\nimport \"./style.css\";\r\nimport Switch from \"react-switch\";\r\n\r\nclass Sidebar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"sidebar\">\r\n        <h1>Instructions:</h1>\r\n        <hr />\r\n        Drag and drop gates on qubit register lines to form a circuit.\r\n        <br />\r\n        <br />\r\n        To connect CNOT trigger lines, click on one of the connection points\r\n        that appear after adding a CNOT gate.\r\n        <br />\r\n        <br />\r\n        To delete a gate, double click on it.\r\n        <h1>Debug:</h1>\r\n        <hr />\r\n        <br />\r\n        <span>Display Gate Drop Locations:</span>\r\n        <Switch\r\n          onChange={(e) => this.props.onSetOption(\"showGateDrop\", e)}\r\n          checked={this.props.options.showGateDrop}\r\n          offColor=\"#b02e2e\"\r\n          className=\"react-switch\"\r\n        />\r\n        <br />\r\n        <br />\r\n        <span>Display Gate Matrices:</span>\r\n        <Switch\r\n          onChange={(e) => this.props.onSetOption(\"showGateMatrix\", e)}\r\n          checked={this.props.options.showGateMatrix}\r\n          offColor=\"#b02e2e\"\r\n          className=\"react-switch\"\r\n        />\r\n        <br />\r\n        <br />\r\n        <span>Display Statevector:</span>\r\n        <Switch\r\n          onChange={(e) => this.props.onSetOption(\"showStatevector\", e)}\r\n          checked={this.props.options.showStatevector}\r\n          offColor=\"#b02e2e\"\r\n          className=\"react-switch\"\r\n        />\r\n        <br />\r\n        <br />\r\n        <span>Random seed:</span>\r\n        <input\r\n          className=\"input\"\r\n          value={this.props.options.randomSeed}\r\n          onChange={(e) => this.props.onSetOption(\"setSeed\", e)}\r\n        ></input>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { Component } from \"react\";\r\nimport { Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport \"./style.css\";\r\nimport Gate from \"./Gate\";\r\n\r\nclass GateMenu extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"gate-menu\">\r\n        <Droppable droppableId={uuid()} key={uuid()} direction=\"horizontal\">\r\n          {(provided, snapshot) => {\r\n            return (\r\n              <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                <span\r\n                  className=\"\r\n                      gate-wrapper\"\r\n                >\r\n                  <Draggable key={1} draggableId={\"cnot\"} index={0}>\r\n                    {(provided) => {\r\n                      return (\r\n                        <Gate\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          innerRef={provided.innerRef}\r\n                          type=\"cnot\"\r\n                          options={this.props.options}\r\n                        />\r\n                      );\r\n                    }}\r\n                  </Draggable>\r\n                </span>\r\n                <span\r\n                  className=\"\r\n                      gate-wrapper\"\r\n                >\r\n                  <Draggable key={2} draggableId={\"h\"} index={0}>\r\n                    {(provided) => {\r\n                      return (\r\n                        <Gate\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          innerRef={provided.innerRef}\r\n                          type=\"h\"\r\n                          options={this.props.options}\r\n                        />\r\n                      );\r\n                    }}\r\n                  </Draggable>\r\n                </span>\r\n                <span\r\n                  className=\"\r\n                      gate-wrapper\"\r\n                >\r\n                  <Draggable key={3} draggableId={\"t\"} index={0}>\r\n                    {(provided) => {\r\n                      return (\r\n                        <Gate\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          innerRef={provided.innerRef}\r\n                          type=\"t\"\r\n                          options={this.props.options}\r\n                        />\r\n                      );\r\n                    }}\r\n                  </Draggable>\r\n                </span>\r\n              </div>\r\n            );\r\n          }}\r\n        </Droppable>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GateMenu;\r\n","import React, { Component } from \"react\";\r\nimport * as math from \"mathjs\";\r\nimport \"./style.css\";\r\n\r\nclass Measure extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      stateVector: [],\r\n    };\r\n  }\r\n\r\n  // a = 1/sqrt(2)*(a+b)\r\n  // b = 1/sqrt(2)*(a-b)\r\n  redistribute(a, b) {\r\n    return {\r\n      a: math.evaluate(\"1/sqrt(2)*(\" + a + \"+\" + b + \")\"),\r\n      b: math.evaluate(\"1/sqrt(2)*(\" + a + \"-\" + b + \")\"),\r\n    };\r\n  }\r\n\r\n  // a = e^(i pi/4)*a\r\n  phaseTransition(a) {\r\n    return math.evaluate(\"e^(i*pi/4)*\" + a);\r\n  }\r\n\r\n  swap(a, b) {\r\n    return { a: b, b: a };\r\n  }\r\n\r\n  evalHGate(j, stateVector) {\r\n    const N = this.props.circuit.length;\r\n    for (var k = 0; k < Math.pow(2, j); k++) {\r\n      for (var l = 0; l < Math.pow(2, N - j - 1); l++) {\r\n        const index0 = l + k * Math.pow(2, N - j);\r\n        const index1 = l + k * Math.pow(2, N - j) + Math.pow(2, N - j - 1);\r\n        const change = this.redistribute(\r\n          stateVector[index0],\r\n          stateVector[index1]\r\n        );\r\n        stateVector[index0] = change.a;\r\n        stateVector[index1] = change.b;\r\n        return stateVector;\r\n      }\r\n    }\r\n  }\r\n\r\n  evalTGate(j, tmpStateVector) {\r\n    const N = this.props.circuit.length;\r\n    for (var k = 0; k < Math.pow(2, j); k++) {\r\n      for (var l = 0; l < Math.pow(2, N - j - 1); l++) {\r\n        const index = l + k * Math.pow(2, N - j) + Math.pow(2, N - j - 1);\r\n        const change = this.phaseTransition(tmpStateVector[index]);\r\n        tmpStateVector[index] = change;\r\n        return tmpStateVector;\r\n      }\r\n    }\r\n  }\r\n\r\n  // m = trigger, n = not\r\n  evalCNOTGate(m, n, tmpStateVector) {\r\n    const N = this.props.circuit.length;\r\n    const u = Math.min(m, n);\r\n    const v = Math.max(m, n);\r\n    for (var x = 0; x < Math.pow(2, u); x++) {\r\n      for (var y = 0; y < Math.pow(2, v - u - 1); y++) {\r\n        for (var z = 0; z < Math.pow(2, N - v - 1); z++) {\r\n          const index0 =\r\n            x * Math.pow(2, N - u) +\r\n            y * Math.pow(2, N - v) +\r\n            z +\r\n            Math.pow(2, N - m - 1);\r\n          const index1 =\r\n            x * Math.pow(2, N - u) +\r\n            y * Math.pow(2, N - v) +\r\n            z +\r\n            Math.pow(2, N - m - 1) +\r\n            Math.pow(2, N - n - 1);\r\n          const change = this.swap(\r\n            tmpStateVector[index0],\r\n            tmpStateVector[index1]\r\n          );\r\n          tmpStateVector[index0] = change.a;\r\n          tmpStateVector[index1] = change.b;\r\n        }\r\n      }\r\n    }\r\n    return tmpStateVector;\r\n  }\r\n\r\n  evaluateCircuit() {\r\n    console.log(this.props.circuit);\r\n    // Initialize state vector\r\n    const N = this.props.circuit.length;\r\n    var tmpStateVector = [];\r\n    tmpStateVector.push(1);\r\n    for (var i = 1; i < Math.pow(2, N); i++) {\r\n      tmpStateVector.push(0);\r\n    }\r\n\r\n    // Column-major traversal\r\n    // i = gate number, j = qubit number\r\n    for (i = 0; i < this.props.circuit[0].length; i++) {\r\n      let foundCNOT = false;\r\n      var k;\r\n      for (var j = 0; j < this.props.circuit.length; j++) {\r\n        switch (this.props.circuit[j][i]) {\r\n          case \"h\":\r\n            tmpStateVector = this.evalHGate(j, tmpStateVector);\r\n            break;\r\n          case \"t\":\r\n            tmpStateVector = this.evalTGate(j, tmpStateVector);\r\n            break;\r\n          case \"trig\":\r\n            if (foundCNOT) break;\r\n            foundCNOT = true;\r\n            for (k = j + 1; k < this.props.circuit.length; k++) {\r\n              if (\r\n                this.props.circuit[k][i] === \"cnotUp\" ||\r\n                this.props.circuit[k][i] === \"cnotDown\"\r\n              ) {\r\n                tmpStateVector = this.evalCNOTGate(j, k, tmpStateVector);\r\n                break;\r\n              }\r\n            }\r\n            break;\r\n          case \"cnotUp\":\r\n            if (foundCNOT) break;\r\n            foundCNOT = true;\r\n            for (k = j + 1; k < this.props.circuit.length; k++) {\r\n              if (this.props.circuit[k][i] === \"trig\") {\r\n                tmpStateVector = this.evalCNOTGate(k, j, tmpStateVector);\r\n                break;\r\n              }\r\n            }\r\n            break;\r\n          case \"cnotDown\":\r\n            if (foundCNOT) break;\r\n            foundCNOT = true;\r\n            for (k = j + 1; k < this.props.circuit.length; k++) {\r\n              if (this.props.circuit[k][i] === \"trig\") {\r\n                tmpStateVector = this.evalCNOTGate(k, j, tmpStateVector);\r\n                break;\r\n              }\r\n            }\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    console.log(tmpStateVector);\r\n    this.setState({\r\n      stateVector: tmpStateVector,\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.evaluateCircuit();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.circuit !== this.props.circuit) {\r\n      this.evaluateCircuit();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const qubits = [];\r\n    for (var i = 0; i < this.props.circuit.length; i++) {\r\n      qubits.push(\r\n        <strong key={i}>\r\n          q<sub>{i}</sub>\r\n        </strong>\r\n      );\r\n    }\r\n    const states = [];\r\n    for (i = 0; i < Math.pow(2, this.props.circuit.length); i++) {\r\n      states.push(\r\n        <div key={i}>\r\n          {(i >>> 0)\r\n            .toString(2)\r\n            .padStart(this.props.circuit.length, \"0\")\r\n            .split(\"\")\r\n            .join(\" \") +\r\n            \": \" +\r\n            (this.state.stateVector[i] !== undefined\r\n              ? math.round(this.state.stateVector[i], 3)\r\n              : \"???\")}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    const probabilities = [];\r\n    for (i = 0; i < Math.pow(2, this.props.circuit.length); i++) {\r\n      var probability;\r\n      if (this.state.stateVector[i] !== undefined) {\r\n        const re = Math.pow(math.re(this.state.stateVector[i]), 2);\r\n        const im = Math.pow(math.im(this.state.stateVector[i]), 2);\r\n        probability = math.round(re + im, 3);\r\n      } else probability = \"???\";\r\n      probabilities.push(\r\n        <div key={i}>\r\n          {(i >>> 0)\r\n            .toString(2)\r\n            .padStart(this.props.circuit.length, \"0\")\r\n            .split(\"\")\r\n            .join(\" \") +\r\n            \": \" +\r\n            (this.state.stateVector[i] !== undefined ? probability : \"???\")}\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"measure\">\r\n        <div className={this.props.options.showStatevector ? \"\" : \"hidden\"}>\r\n          <h4>Statevector:</h4>\r\n          <div>{qubits}</div>\r\n          {states}\r\n        </div>\r\n        <div className={this.props.options.showStatevector ? \"hidden\" : \"\"}>\r\n          <h4>Probability:</h4>\r\n          <div>{qubits}</div>\r\n          {probabilities}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Measure;\r\n","import React, { Component } from \"react\";\nimport Circuit from \"./Circuit\";\nimport Toolbar from \"./Toolbar\";\nimport Sidebar from \"./Sidebar\";\nimport GateMenu from \"./GateMenu\";\nimport { DragDropContext } from \"react-beautiful-dnd\";\nimport Measure from \"./Measure\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      options: {\n        showGateDrop: false,\n        showGateMatrix: false,\n        showStatevector: true,\n        randomSeed: \"2021\",\n      },\n\n      circuit: [\n        [\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n        ],\n        [\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n        ],\n        [\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n        ],\n      ],\n    };\n  }\n\n  onDragEnd(result) {\n    if (\n      result.destination &&\n      result.destination.droppableId.charAt(0) === \"q\"\n    ) {\n      let tmpCircuit = this.state.circuit;\n      const qubit = parseInt(result.destination.droppableId.charAt(1));\n      const col = parseInt(result.destination.droppableId.substring(3));\n      if (result.draggableId === \"cnot\") {\n        for (var i = 0; i < tmpCircuit.length; i++) {\n          if (\n            i !== qubit &&\n            (tmpCircuit[i][col] === \"cnot\" ||\n              tmpCircuit[i][col] === \"cnotUp\" ||\n              tmpCircuit[i][col] === \"cnotDown\")\n          ) {\n            alert(\"Error: Only one CNOT allowed per column\");\n            return;\n          }\n        }\n      }\n      tmpCircuit[qubit][col] = result.draggableId;\n\n      if (result.draggableId === \"cnot\") {\n        for (i = qubit + 1; i < tmpCircuit.length; i++) {\n          if (tmpCircuit[i][col] !== null) {\n            break;\n          } else {\n            tmpCircuit[i][col] = \"trigopt\";\n          }\n        }\n        for (i = qubit - 1; i >= 0; i--) {\n          if (tmpCircuit[i][col] !== null) {\n            break;\n          } else {\n            tmpCircuit[i][col] = \"trigopt\";\n          }\n        }\n      }\n      this.setState({ circuit: tmpCircuit });\n    }\n  }\n\n  onSetOption(option, state) {\n    switch (option) {\n      case \"showGateDrop\":\n        this.setState((prevState) => ({\n          options: {\n            ...prevState.options,\n            showGateDrop: state,\n          },\n        }));\n        break;\n      case \"showGateMatrix\":\n        this.setState((prevState) => ({\n          options: {\n            ...prevState.options,\n            showGateMatrix: state,\n          },\n        }));\n        break;\n      case \"showStatevector\":\n        this.setState((prevState) => ({\n          options: {\n            ...prevState.options,\n            showStatevector: state,\n          },\n        }));\n        break;\n      case \"setSeed\":\n        console.log(state.target.value);\n        this.setState((prevState) => ({\n          options: {\n            ...prevState.options,\n            randomSeed: state.target.value,\n          },\n        }));\n        break;\n      default:\n        return;\n    }\n  }\n\n  onSelectTrigger(qubit, index) {\n    let tmpCircuit = this.state.circuit;\n    let connecting = false;\n    for (var i = 0; i < tmpCircuit.length; i++) {\n      if (i === qubit) {\n        connecting = !connecting;\n      }\n      if (tmpCircuit[i][index] === \"cnot\") {\n        tmpCircuit[i][index] = connecting ? \"cnotUp\" : \"cnotDown\";\n        connecting = !connecting;\n        continue;\n      } else if (tmpCircuit[i][index] === \"trigopt\") {\n        tmpCircuit[i][index] = connecting ? \"connect\" : null;\n      }\n    }\n    tmpCircuit[qubit][index] = \"trig\";\n    this.setState({ circuit: tmpCircuit });\n  }\n\n  onDeleteGate(qubit, index, isCNOT) {\n    let tmpCircuit = this.state.circuit;\n    tmpCircuit[qubit][index] = null;\n    if (isCNOT) {\n      for (var i = 0; i < tmpCircuit.length; i++) {\n        if (\n          tmpCircuit[i][index] === \"trig\" ||\n          tmpCircuit[i][index] === \"connect\" ||\n          tmpCircuit[i][index] === \"trigopt\"\n        )\n          tmpCircuit[i][index] = null;\n      }\n    }\n\n    this.setState({ circuit: tmpCircuit });\n  }\n\n  onClearCircuit() {\n    this.setState({\n      circuit: [\n        [\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n        ],\n        [\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n        ],\n        [\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n          null,\n        ],\n      ],\n    });\n  }\n\n  onAddQubit() {\n    var tmpCircuit = this.state.circuit;\n    if (tmpCircuit.length < 10) {\n      tmpCircuit.push([\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n        null,\n      ]);\n    }\n    this.setState({ circuit: tmpCircuit });\n  }\n\n  onRemoveQubit() {\n    var tmpCircuit = this.state.circuit;\n    if (tmpCircuit.length > 1) {\n      tmpCircuit.pop();\n    }\n    this.setState({ circuit: tmpCircuit });\n  }\n\n  render() {\n    return (\n      <>\n        <Toolbar />\n        <Sidebar\n          options={this.state.options}\n          onSetOption={this.onSetOption.bind(this)}\n        />\n        <div className=\"container\">\n          <DragDropContext onDragEnd={(result) => this.onDragEnd(result)}>\n            <div>\n              <h2>New Program &gt;</h2>\n              <hr />\n              <h3>Gates:</h3>\n              <GateMenu options={this.state.options} />\n              <hr />\n              <h3>Circuit:</h3>\n              <Circuit\n                options={this.state.options}\n                circuit={this.state.circuit}\n                onSelectTrigger={this.onSelectTrigger.bind(this)}\n                onDeleteGate={this.onDeleteGate.bind(this)}\n                onClearCircuit={this.onClearCircuit.bind(this)}\n                onAddQubit={this.onAddQubit.bind(this)}\n                onRemoveQubit={this.onRemoveQubit.bind(this)}\n              />\n              <hr />\n              <h3>Measurement:</h3>\n              <Measure\n                circuit={[].concat(this.state.circuit)}\n                options={this.state.options}\n              />\n            </div>\n          </DragDropContext>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}